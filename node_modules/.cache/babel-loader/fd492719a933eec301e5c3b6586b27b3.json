{"ast":null,"code":"var _jsxFileName = \"/home/sazzad/Desktop/Code/Tic-Tac-Toe-With-React/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n} // class Square extends React.Component {\n//     // constructor(props) {\n//     //     super(props);\n//     //     this.state = {\n//     //         value: null,\n//     //     };\n//     // }\n//     render() {\n//         return (\n//             <button\n//                 className=\"square\"\n//                 onClick={\n//                     () =>\n//                         this.props.onClick({ value: 'X' })\n//                 }>\n//                 {this.props.value}\n//             </button>\n//         );\n//     }\n// }\n\n\n_c = Square;\n\nclass Board extends React.Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         squares: Array(9).fill(null),\n  //         xIsNext: true,\n  //     };\n  // }\n  // handleClick(i) {\n  //     const history = this.state.history;\n  //     const current = history[history.length - 1];\n  //     const squares = current.squares.slice();\n  //     if (calculateWinner(squares) || squares[i]) {\n  //         return;\n  //     }\n  //     squares[i] = this.state.xIsNext ? 'X' : 'O';\n  //     // squares[i] = 'X';\n  //     this.setState({\n  //         history: history.concat(\n  //             [{\n  //                 squares: squares,\n  //             }]\n  //         ),\n  //         xIsNext: !this.state.xIsNext,\n  //     });\n  // }\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this);\n  }\n\n  render() {\n    // const winner = calculateWinner(this.state.squares);\n    // let status;\n    // if (winner) {\n    //     status = 'Winner: ' + winner;\n    // }\n    // else {\n    //     status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\n    // }\n    // const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O'; // squares[i] = 'X';\n\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move # ' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner : ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(sqaures) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (sqaures[a] && sqaures[a] === sqaures[b] && sqaures[a] === sqaures[c]) {\n      return sqaures[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 226,\n  columnNumber: 13\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","winner","moves","map","move","desc","status","sqaures","lines","a","b","c","root","createRoot","document","getElementById"],"sources":["/home/sazzad/Desktop/Code/Tic-Tac-Toe-With-React/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\n\nfunction Square(props) {\n    return (\n        <button className='square' onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n// class Square extends React.Component {\n//     // constructor(props) {\n//     //     super(props);\n//     //     this.state = {\n//     //         value: null,\n//     //     };\n//     // }\n\n//     render() {\n//         return (\n//             <button\n//                 className=\"square\"\n//                 onClick={\n//                     () =>\n//                         this.props.onClick({ value: 'X' })\n\n//                 }>\n//                 {this.props.value}\n//             </button>\n//         );\n//     }\n// }\n\nclass Board extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         squares: Array(9).fill(null),\n    //         xIsNext: true,\n    //     };\n    // }\n\n    // handleClick(i) {\n    //     const history = this.state.history;\n    //     const current = history[history.length - 1];\n\n    //     const squares = current.squares.slice();\n\n    //     if (calculateWinner(squares) || squares[i]) {\n    //         return;\n    //     }\n\n    //     squares[i] = this.state.xIsNext ? 'X' : 'O';\n    //     // squares[i] = 'X';\n    //     this.setState({\n    //         history: history.concat(\n    //             [{\n    //                 squares: squares,\n    //             }]\n    //         ),\n    //         xIsNext: !this.state.xIsNext,\n    //     });\n    // }\n\n\n    renderSquare(i) {\n        return (<Square value=\n            {this.props.squares[i]}\n            onClick={() => this.props.onClick(i)} />\n        );\n    }\n\n    render() {\n        // const winner = calculateWinner(this.state.squares);\n\n        // let status;\n\n        // if (winner) {\n        //     status = 'Winner: ' + winner;\n        // }\n        // else {\n        //     status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\n        // }\n        // const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n        return (\n            <div>\n                {/* <div className=\"status\">{status}</div> */}\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n\n        const squares = current.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        // squares[i] = 'X';\n        this.setState({\n            history: history.concat(\n                [{\n                    squares: squares,\n                }]\n            ),\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move # ' + move :\n                'Go to game start';\n\n            return (\n                <li key={move}>\n                    <button onClick={() =>\n                        this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        })\n\n\n        let status;\n\n        if (winner) {\n            status = 'Winner : ' + winner;\n        }\n        else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={(i) =>\n                            this.handleClick(i)\n                        }\n\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(sqaures) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (sqaures[a] && sqaures[a] === sqaures[b] && sqaures[a] === sqaures[c]) {\n            return sqaures[a];\n        }\n    }\n    return null;\n}\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<Game />);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}